<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Monthly Data - Roopvilla Project</title>

    <link rel="canonical" href="https://getbootstrap.com/docs/5.0/examples/carousel/">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script> 
    <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>


    <!-- Bootstrap core CSS -->
<link href="assets/dist/css/bootstrap.min.css" rel="stylesheet">

    <style>
      .responsive {
        width: 100%;
        height: auto;
      }
      .bd-placeholder-img {
        font-size: 1.125rem;
        text-anchor: middle;
        -webkit-user-select: none;
        -moz-user-select: none;
        user-select: none;
      }

      @media (min-width: 768px) {
        .bd-placeholder-img-lg {
          font-size: 3.5rem;
        }
      }

      .div-alignments{
        width: 80%; margin:0 auto;
      }

      .list-length{
        width:50%;
      }

      .badge-margin{
        margin-right: 2%;
      }

    </style>
    
    <!-- Custom styles for this template -->
    <link href="carousel.css" rel="stylesheet">
    <link href="heroes.css" rel="stylesheet">
    <link href="features.css" rel="stylesheet">
  </head>
  <body>
    
<header>
  <nav class="navbar navbar-expand-md navbar-dark fixed-top bg-dark">
    <div class="container-fluid">
      <a class="navbar-brand" href="#">Roopvilla Project</a>
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarCollapse" aria-controls="navbarCollapse" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarCollapse">
        <ul class="navbar-nav me-auto mb-2 mb-md-0">
          <li class="nav-item">
            <a class="nav-link" href="/home">Home</a>
          </li>
          <li class="nav-item">
            <a class="nav-link active" aria-current="page" href="#">Monthly Data</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/stats">Statistics</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/mailer">Mailer</a>
        </ul>
        <div class="d-flex">
          <span class="nav-link nav-item" style="font-weight: bold;">Welcome, <%= user.OWNER_NAME%></span>
          <button id="logout" class="btn btn-outline-success nav-item">Logout</button>
        </div>
      </div>
    </div>
  </nav>
</header>

<main>

  <div class="p-5 mb-4 bg-light rounded-3">
    <div class="container-fluid py-5">
      <h1 class="display-5 fw-bold">Monthly Data</h1>
      <p class="col-md-8 fs-4">Using a series of utilities, you can create this jumbotron, just like the one in previous versions of Bootstrap. Check out the examples below for how you can remix and restyle it to your liking.</p>
      <p class="fs-5">Select the Month : </p> <select class="js-example-basic-single btn" id="availableMonths" name="month" style="width: 25%;"></select><br><br>
      <button class="btn btn-primary btn-lg" type="button" id="FetchDetails">Load Data</button>
    </div>
  </div>

    <div class="b-example-divider"></div>

    <div class="bg-dark text-secondary px-4 py-5 text-center">
      <div class="py-5">
        <h1 class="display-5 fw-bold text-white">Monthly Estimates, Expense & Summary </h1>
        <div class="col-lg-10 mx-auto">
          <div class="row">
            <div class="col-sm-6">
              <div class="card bg-success text-white">
                <div class="card-body" >
                  <h5 class="card-title">Estimates & Expenses</h5>
                  <div id="estExp">

                  </div>
                </div>
              </div>
            </div>
            <div class="col-sm-6">
              <div class="card bg-warning text-white">
                <div class="card-body">
                  <h5 class="card-title">Summary</h5>
                  <div id="summary">
                    
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  
    <div class="b-example-divider"></div>



  <!--TEXT-->
  <figure class="text-center">
    <blockquote class="blockquote">
      <p>Owner-wise Data</p>
    </blockquote>
  </figure>

  <div class="accordion div-alignments p-3" id="ownerwiseData">
  </div>

  <div class="b-example-divider"></div>

  <figure class="text-center">
    <blockquote class="blockquote">
      <p>Flat-wise Data</p>
    </blockquote>
  </figure>

  <div class="div-alignments">
    <table class="table table-dark table-striped table-hover">
      <thead>
        <tr>
          <th scope="col">Flat Number</th>
          <th scope="col">Amount</th>
          <th scope="col">Flags</th>
        </tr>
      </thead>
      <tbody id="flatwiseData">
        
      </tbody>
    </table>
  </div>

  <div class="b-example-divider"></div>

  <!-- FOOTER -->
  <footer class="container">
    <p>&copy; 2021 Roopvilla Project</p>
  </footer>
</main>


    <script src="assets/dist/js/bootstrap.bundle.min.js"></script>
    <script>
    function getMonthFromString(mon){
          return new Date(Date.parse(mon +" 1, 2012")).getMonth()+1
        }

        function clientCallGET(url, onSuccess){
          const client = new XMLHttpRequest();
          client.onload=function(){
            if (this.status == 200) {
                onSuccess(JSON.parse(this.responseText))
            }
            else{
                console.error({
                    code : this.status,
                    details : JSON.parse(this.responseText)
                })
            }
          };
          client.open("GET", url);
          client.send();
        }


        $(function(){

          const availableDataClient = new XMLHttpRequest();
          availableDataClient.onload= function(){
            const response =JSON.parse(this.responseText);
            if(this.status == 200)
            {
              const results=[];
              let crt=0
              response.months.forEach(element => {
                results.push({
                  "id": crt,
                  "text": element
                });
                crt++;
              });
              $('#availableMonths').select2({
                data: results
              });       
            }
            else{
                    console.error({
                        code : this.status,
                        details : response.months
                    })
                }
          };
          availableDataClient.open("GET", "/months/availableByYear/"+new Date().getFullYear());
          availableDataClient.send();



          $('#FetchDetails').click(function(event){
            //Get Month
            const month = $('#availableMonths').find(':selected')[0].innerHTML;
            const monthNumber = getMonthFromString(month);

            //call for get estimates
            clientCallGET("/months/estimates?monthNumber="+monthNumber+"&year="+new Date().getFullYear(), function(response){
              $('#estExp').html("");

              response.data.forEach((element)=>{
                const template = `<ul class="list-group list-group-horizontal">
                                  <li class="list-group-item list-length list-group-item-success">${element.itemName}</li>
                                  <li class="list-group-item list-length list-group-item-success">${element.itemPrice}</li>
                                </ul>`;
                $('#estExp').append(template);
              });
            })

            //call for get summary
            clientCallGET("/months/summary?monthNumber="+monthNumber+"&year="+new Date().getFullYear(), function(response){
              $('#summary').html("");

              const template = `<ul class="list-group list-group-horizontal">
                                  <li class="list-group-item list-length list-group-item-warning">Monthly Accumulaton</li>
                                  <li class="list-group-item list-length list-group-item-warning">${response.data.monthlyAccumulation}</li>
                                </ul>
                                <ul class="list-group list-group-horizontal">
                                  <li class="list-group-item list-length list-group-item-warning">Monthly Expenses</li>
                                  <li class="list-group-item list-length list-group-item-warning">${response.data.monthlyExpense}</li>
                                </ul>
                                <ul class="list-group list-group-horizontal">
                                  <li class="list-group-item list-length list-group-item-warning">Balance</li>
                                  <li class="list-group-item list-length list-group-item-warning">${response.data.balance}</li>
                                </ul>`;
              
              $('#summary').html(template);
            })

            //call for flatwise data
            clientCallGET("/months/flatwiseData?monthNumber="+monthNumber+"&year="+new Date().getFullYear(), function(response){
              $("#flatwiseData").html("");
              response.data.forEach((element)=>{
                let flags = '';
                if(element.defaulterFlag === true) {
                  flags+='<span class="badge rounded-pill bg-danger badge-margin">Defaulted</span>';
                }
                if(element.unsoldFlag === true)
                {
                  flags+='<span class="badge rounded-pill bg-info text-dark badge-margin">Unsold</span>';
                }
                if(element.notPayingFlag === true)
                {
                  flags+='<span class="badge rounded-pill bg-warning text-dark badge-margin">Not Paying</span>';
                }

                const template= `<tr>
                                  <th scope="row">${element.flatNumber}</th>
                                  <td>${element.amount}</td>
                                  <td>${flags}</td>
                                </tr>`;
                
                $("#flatwiseData").append(template);
              });

            })

            //call for ownerwise data
            clientCallGET("/months/ownerWiseData?monthNumber="+monthNumber+"&year="+new Date().getFullYear(), function(response){
              $("#ownerwiseData").html("");
                let count = 1;
                response.data.forEach((element)=>{
                  const id="#ownerwiseData";
                  const headingID = "heading"+count;
                  const collapseID = "collapse"+count;

                  let flats = "";
                  element.flatsAquired.forEach((flt)=>{
                    flats+=`<span class="badge bg-primary badge-margin">${flt}</span>`;
                  });


                  const template = `
                  <div class="accordion-item">
                    <h2 class="accordion-header" id="${headingID}">
                      <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse"  aria-expanded="false" data-bs-target="#${collapseID}"  aria-controls="${collapseID}">
                        ${element.Owner}
                      </button>
                    </h2>
                    <div id="${collapseID}" class="accordion-collapse collapse" aria-labelledby="${headingID}" data-bs-parent="${id}">
                      <div class="accordion-body">
                        <ul class="list-group list-group-horizontal">
                          <li class="list-group-item list-length list-group-item-secondary">Flats Aquired</li>
                          <li class="list-group-item list-length list-group-item-secondary">${flats}</li>
                        </ul>
                        <ul class="list-group list-group-horizontal">
                          <li class="list-group-item list-length list-group-item-secondary">Rate Per Flat</li>
                          <li class="list-group-item list-length list-group-item-secondary">${element.ratePerFlat}</li>
                        </ul>
                        <ul class="list-group list-group-horizontal">
                          <li class="list-group-item list-length list-group-item-secondary">Total Rate</li>
                          <li class="list-group-item list-length list-group-item-secondary">${element.rateTotal}</li>
                        </ul>
                        <ul class="list-group list-group-horizontal">
                          <li class="list-group-item list-length list-group-item-secondary">EF Amount</li>
                          <li class="list-group-item list-length list-group-item-secondary">${element.emergencyFundAmount}</li>
                        </ul>
                        <ul class="list-group list-group-horizontal">
                          <li class="list-group-item list-length list-group-item-secondary">Grand Total</li>
                          <li class="list-group-item list-length list-group-item-secondary">${element.grandTotalPayable}</li>
                        </ul>
                        <ul class="list-group list-group-horizontal">
                          <li class="list-group-item list-length list-group-item-secondary">Payment Received</li>
                          <li class="list-group-item list-length list-group-item-secondary">${element.paymentReceivedFlag === true ? '<span class="badge bg-success">YES</span>' : '<span class="badge bg-danger">NO</span>'}</li>
                        </ul>
                      </div>
                    </div>
                </div>`;
                  $(id).append(template);
                  count++;
                });
            })

          });
          
          
          $('#logout').click(function(event){
                const client = new XMLHttpRequest();
                client.onload = function (){
                        if (this.status == 204) {
                            window.location="/"
                        }
                        else{
                            console.error({
                                code : this.status,
                                details : JSON.parse(this.responseText)
                            })
                        }
                    }
                client.open("DELETE", "/users/logout",true);
                client.send();
                event.preventDefault();
            });
        });

        
    </script>

      
  </body>
</html>
